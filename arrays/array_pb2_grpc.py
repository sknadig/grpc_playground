# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import array_pb2 as array__pb2


class ArrayDemoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ArrayMethod = channel.unary_unary(
        '/array.ArrayDemo/ArrayMethod',
        request_serializer=array__pb2.ArrayRequest.SerializeToString,
        response_deserializer=array__pb2.ArrayResponse.FromString,
        )
    self.BidirectionalArrayMethod = channel.stream_stream(
        '/array.ArrayDemo/BidirectionalArrayMethod',
        request_serializer=array__pb2.ArrayRequest.SerializeToString,
        response_deserializer=array__pb2.ArrayResponse.FromString,
        )


class ArrayDemoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ArrayMethod(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BidirectionalArrayMethod(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ArrayDemoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ArrayMethod': grpc.unary_unary_rpc_method_handler(
          servicer.ArrayMethod,
          request_deserializer=array__pb2.ArrayRequest.FromString,
          response_serializer=array__pb2.ArrayResponse.SerializeToString,
      ),
      'BidirectionalArrayMethod': grpc.stream_stream_rpc_method_handler(
          servicer.BidirectionalArrayMethod,
          request_deserializer=array__pb2.ArrayRequest.FromString,
          response_serializer=array__pb2.ArrayResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'array.ArrayDemo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
